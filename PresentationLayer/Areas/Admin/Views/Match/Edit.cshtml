@using CoreLayer.Enums
@model EditMatchVM

<style>
    .select2-container--default .select2-selection--single .select2-selection__rendered {
        color: #444;
        line-height: 14px;
    }
</style>

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Match/</span> Edit</h4>

    <!-- Basic Layout -->
    <div class="row">
        <div class="col-xl">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Match</h5>
                    <small class="text-muted float-end">Edit</small>
                </div>
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data">
                        <input type="hidden" asp-for="Id" />
                        <div class="mb-3">
                            <label class="form-label" for="TournamentId">Tournament</label>
                            <select class="js-example-basic-single form-control" style="width:100%; line-height:none;" asp-for="TournamentId" asp-items="ViewBag.Tournaments">
                                <option value="">Select Tournament</option>
                            </select>
                            <span class="text-danger" asp-validation-for="TournamentId"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="Description">Home Team</label>
                            <select class="js-example-basic-single form-control" style="width:100%; line-height:none;" asp-for="HomeTeamId" asp-items="ViewBag.Teams">
                                <option value="">Select Home Team</option>
                            </select>
                            <span class="text-danger" asp-validation-for="HomeTeamId"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="HomeScore">Home Score</label>
                            <input type="Number" min="0" value="0" class="form-control" id="HomeScore" asp-for="HomeScore" />
                            <span class="text-danger" asp-validation-for="HomeScore"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="AwayTeamId">Away Team</label>
                            <select class="js-example-basic-single form-control" style="width:100%; line-height:none;" asp-for="AwayTeamId" asp-items="ViewBag.Teams">
                                <option value="">Select Away Team</option>
                            </select>
                            <span class="text-danger" asp-validation-for="AwayTeamId"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="AwayScore">Away Score</label>
                            <input type="Number" min="0" value="0" class="form-control" id="AwayScore" asp-for="AwayScore" />
                            <span class="text-danger" asp-validation-for="AwayScore"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="Location">Location</label>
                            <input type="text" class="form-control" id="Location" placeholder="ACME Inc." asp-for="Location" />
                            <span class="text-danger" asp-validation-for="Location"></span>
                        </div>


                        <div class="mb-3">
                            <label class="form-label" for="MatchDate">Match Date</label>
                            <input type="datetime-local" class="form-control" id="MatchDate" asp-for="MatchDate" />
                            <span class="text-danger" asp-validation-for="MatchDate"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="Description">Match Status</label>
                            <select asp-for="MatchStatus" class="js-example-basic-single form-control" style="width:100%; line-height:none;">
                                <option value="">Select Match Status</option>
                                @foreach (var status in Enum.GetValues(typeof(MatchStatus)))
                                {
                                    <option value="@status">@status</option>
                                }
                            </select>
                            <span class="text-danger" asp-validation-for="MatchStatus"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-check-label" for="IsBookable">Is Bookable?</label>
                            <input type="checkbox" class="form-check-input" asp-for="IsBookable" id="IsBookable" />
                            <span class="text-danger" asp-validation-for="IsBookable"></span>
                        </div>

                        <div id="ticketPricesSection" style="display:@(Model.IsBookable ? "block" : "none")">
                            <h5>Ticket Prices</h5>
                            <table class="table table-bordered" id="ticketPricesTable">
                                <thead>
                                    <tr>
                                        <th>Category</th>
                                        <th>Price</th>
                                        <th>Home Tickets</th>
                                        <th>Away Tickets</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.TicketPrices.Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                <select name="TicketPrices[@i].Category" class="form-control category-select">
                                                    @foreach (var cat in Enum.GetNames(typeof(TicketCategory)))
                                                    {
                                                        if(Model.TicketPrices[i].Category.ToString() == cat)
                                                                                                    {
                                                            <option value="@cat" selected>@cat</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@cat">@cat</option>
                                                        }
                                                    }
                                                </select>
                                            </td>
                                            <td>
                                                <input type="number" name="TicketPrices[@i].Price" class="form-control"
                                                       min="0" value="@Model.TicketPrices[i].Price" />
                                            </td>
                                            <td>
                                                <input type="number" name="TicketPrices[@i].HomeTickets" class="form-control"
                                                       min="0" value="@Model.TicketPrices[i].HomeTickets" />
                                            </td>
                                            <td>
                                                <input type="number" name="TicketPrices[@i].AwayTickets" class="form-control"
                                                       min="0" value="@Model.TicketPrices[i].AwayTickets" />
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-danger btn-sm removeRow">X</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <button type="button" class="btn btn-success" id="addTicketRow">+ Add Ticket</button>
                        </div>


                        <button type="submit" class="btn btn-primary">Edit</button>
                    </form>
                </div>
            </div>
        </div>



    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const isBookableCheckbox = document.getElementById("IsBookable");
        const ticketPricesSection = document.getElementById("ticketPricesSection");
        const ticketTableBody = document.querySelector("#ticketPricesTable tbody");
        const addTicketRowBtn = document.getElementById("addTicketRow");

        const categories = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                        Enum.GetNames(typeof(TicketCategory)).ToList()
                ));

        // toggle ticket section
        isBookableCheckbox.addEventListener("change", function () {
            ticketPricesSection.style.display = this.checked ? "block" : "none";
        });

        // add row
        addTicketRowBtn.addEventListener("click", function () {
            const selectedCats = [...ticketTableBody.querySelectorAll("select")].map(s => s.value);
            let availableCats = categories.filter(c => !selectedCats.includes(c));

            if (availableCats.length === 0) {
                alert("All categories already selected.");
                return;
            }

            let rowIndex = ticketTableBody.querySelectorAll("tr").length;

            let row = document.createElement("tr");

            row.innerHTML = `
                <td>
                    <select name="TicketPrices[${rowIndex}].Category" class="form-control category-select">
                        ${availableCats.map(c => `<option value="${c}">${c}</option>`).join("")}
                    </select>
                </td>
                <td><input type="number" name="TicketPrices[${rowIndex}].Price" class="form-control" min="0" value="0" /></td>
                <td><input type="number" name="TicketPrices[${rowIndex}].HomeTickets" class="form-control" min="0" value="0" /></td>
                <td><input type="number" name="TicketPrices[${rowIndex}].AwayTickets" class="form-control" min="0" value="0" /></td>
                <td><button type="button" class="btn btn-danger btn-sm removeRow">X</button></td>
            `;

            ticketTableBody.appendChild(row);
        });

        // remove row
        ticketTableBody.addEventListener("click", function (e) {
            if (e.target.classList.contains("removeRow")) {
                e.target.closest("tr").remove();
            }
        });
    });
</script>

